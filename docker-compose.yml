version: '3.2'

services:

  rabbitmq:
    labels:
      kompose.service.type: LoadBalancer
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports: 
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/docker-conf/rabbitmq/data/:/var/lib/rabbitmq
      - ~/docker-conf/rabbitmq/data/:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 5

  cache:
    labels:
      kompose.service.type: LoadBalancer
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6380:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - cache:/data

  mongodb:
    labels:
      kompose.service.type: LoadBalancer
    image: mongo:6.0.2
    ports:
      - 27017:27017
    volumes:
      - ~/apps/mongo:/data/db
    environment:
      #REDIS_HOST: cache
      #REDIS_PORT: 6379
      #REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
      MONGO_INIT_USERNAME: root
      MONGO_INIT_PASSWORD: rootuser

  client:
    labels:
      kompose.service.type: LoadBalancer
    build:
      context: ./client
    volumes:
      - './client:/app'
      - '/app/node_modules'
    env_file:
    - ./client/.env
    ports:
      - 3000:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
  
  auth:
    labels:
      kompose.service.type: LoadBalancer
    build:
      context: ./microservices_workspace/auth_service
      args:
        - NODE_ENV=development
    ports:
      - "5006:5006"
    volumes:
      - ./auth_service:/app
    environment:
      - SERVICE=auth
    env_file:
      - ./microservices_workspace/auth_service/.env
    restart: on-failure
    depends_on:
      - mongodb
      - rabbitmq

  file:
    labels:
      kompose.service.type: LoadBalancer
    build:
      context: ./microservices_workspace/file_service
      args:
        - NODE_ENV=development
    ports:
      - "5007:5007"
    volumes:
      - ./file_service:/app
    environment:
      - SERVICE=file
    env_file:
      - ./microservices_workspace/file_service/.env
    restart: on-failure
    depends_on:
      - mongodb
      - rabbitmq
# Redis for analytics service (!)

# networks: 
#   rabbitmq_nodejs:
#     driver: bridge
volumes:
  db:
    driver: local
  cache:
    driver: local

